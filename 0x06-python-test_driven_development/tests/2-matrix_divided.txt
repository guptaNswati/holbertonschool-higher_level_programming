The ``2-matrix_divided`` module
=============================

Using ``matrix_divided``
-------------

This is an example text file in reStructuredText format. First import
``matrix_divided`` from the ``2-matrix_divided`` module:

     >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use it:

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    >>> matrix_divided([[], []], 4.1)
    [[], []]

    >>> matrix_divided(-2, -3)
    6

    >>> matrix_divided([[1], [1]], 0)
    Trackback (most recent call last):
    doctest.IGNORE_EXCEPTION_DETAIL
    TypeError:

    >>> matrix_divided([[], []], "2.3")
    Trackback (most recent call last):
    doctest.IGNORE_EXCEPTION_DETAIL
    TypeError: divisor must be an integer or float

    >>> matrix_divided("Holberton", "School")
    Traceback (most recent call last):
    doctest.IGNORE_EXCEPTION_DETAIL
    TypeError: can't multiply sequence by non-int of type 'str'

    >>> matrix_divided([1, 2, 3], 2)
    [1, 2, 3, 1, 2, 3]

    >>> mul("hello, 1, 2", 2)
    'hello, 1, 2hello, 1, 2'

    >>> mul((1, 2), 2)
    (1, 2, 1, 2)

    >>> mul([1, 2, 3, 1, 2, 3], [1, 2, 3])
    Traceback (most recent call last):
    doctest.IGNORE_EXCEPTION_DETAIL
    TypeError: can't multiply sequence by non-int of type 'list'

    >>> mul(None, 1)
    Traceback (most recent call last):
    doctest.IGNORE_EXCEPTION_DETAIL
    TypeError: unsupported operand type(s) for *: 'NoneType' and 'int'

    >>> mul({5: "Holbrtn"}, 4)
    Traceback (most recent call last):
    doctest.IGNORE_EXCEPTION_DETAIL
    TypeError: unsupported operand type(s) for *: 'dict' and 'int'

    >>> mul(2, {1, 2, 3})
    Traceback (most recent call last):
    doctest.IGNORE_EXCEPTION_DETAIL
    TypeError: unsupported operand type(s) for *: 'int' and 'set'
