The ``2-matrix_divided`` module
=============================

Using ``matrix_divided``
----------------------

This is an example text file in reStructuredText format. First import
``matrix_divided`` from the ``2-matrix_divided`` module:

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use it:

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix_divided([[-2]], -3)
0.66

>>> matrix_divided([[1, 2, 3]], 2)
[0.5, 1, 1.5]

>>> matrix_divided([[], []], 4.1)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1], [1]], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

>>> matrix_divided([[1], [1]], "2.3")
Traceback (most recent call last):
...
TypeError: div must be a number

>>> matrix_divided("Holberton", "School")
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided("hello, 1, 2", 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, 3], [1, 2, 3]], [1, 2, 3])
Traceback (most recent call last):
...
TypeError: div must be a number

>>> matrix_divided(None, 1)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided({5: "Holbrtn"}, 4)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(2, {1, 2, 3})
Traceback (most recent call last):
...
TypeError: div must be a number

>>> matrix_divided([[1, 2, 3], [4, 5, 6, 7]], 3)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([1], 4)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
